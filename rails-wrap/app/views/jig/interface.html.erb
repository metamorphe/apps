
<script type="text/javascript">
// .d8888.  .o88b. d8888b. d888888b d8888b. d888888b 
// 88'  YP d8P  Y8 88  `8D   `88'   88  `8D `~~88~~' 
// `8bo.   8P      88oobY'    88    88oodD'    88    
//   `Y8b. 8b      88`8b      88    88~~~      88    
// db   8D Y8b  d8 88 `88.   .88.   88         88    
// `8888Y'  `Y88P' 88   YD Y888888P 88         YP    
                                                  

  var factory, zoom, materials, storage;
  $(function(){
    attachHandlers();
    storage = new WebStorage();
    
    // storage.cache("cow", function(){
       storage.set("cow", "moo");
    // }, function(value){
      // console.log(value);
    // });

    console.log("Checking", storage.get("cow"));

    factory = new JigDesigner($("#sandbox"), "/fancyloop.svg");
    zoom = new Zoom(factory.paper.view.zoom, factory.paper);
    materials = new Materials($("#materials"));

    StatsController.DOM = $('#stat-box');
    stats = new StatsController(factory);

    // DROP LOGIC
    $('#sandbox canvas').on("drop", function(event){
      event.preventDefault();  
      event.stopPropagation();
      var filename = event.originalEvent.dataTransfer.getData("text");
      var position = paper.view.viewToProject(new paper.Point(event.originalEvent.x, event.originalEvent.y));
      console.log("Dropped!", filename , position, event);
      factory.addSVG(filename, position);
    }).on("dragover", function(event) {
      event.preventDefault();  
      event.stopPropagation();
      $(this).addClass('dragging');
    }).on("dragleave", function(event) {
      event.preventDefault();  
      event.stopPropagation();
      $(this).removeClass('dragging');
    });

    $('img').on('dragstart', function(event){
      event.originalEvent.dataTransfer.setData("text", $(this).attr('src'));
    });

    // END DROP LOGIC

  });

  function attachHandlers(){
    WirePath.DOM = $("#wirepath_controller");

    $("#zoom-in").click(function(){zoom.in();});
    $("#zoom-out").click(function(){zoom.out();});
    var sb = new SidebarController();

    $('.download').click(function(){
    	if($(this).attr("name") == "svg")
	      $(this).attr('href', 'data:text/svg,' + factory.export(TextureGenerator.SVG) ).attr('download', 'mytexture.svg');
	    else if($(this).attr("name") == "png")
		    $(this).attr('href', factory.export(TextureGenerator.PNG) ).attr('download', 'mytexture.png');
    });
  }

  function SidebarController(){

    $("#materials").change(function(){
      var matIdx = parseInt($(this).val());
      var material = materials.at(matIdx);
      
      if(factory.activePath){
        factory.wirepaths.at(factory.activePath).material = material;

        factory.wirepaths.at(factory.activePath).update();
        factory.wirepaths.at(factory.activePath).updateDOM();
        factory.paper.view.update();
      }
    });

    $("#termination-a").change(function(){
      var terminationType = parseInt($(this).val());
      if(factory.activePath){
        var path = factory.wirepaths.at(factory.activePath);
        path.terminationA = terminationType;
        path.update().updateDOM();
      }
    });
    $("#termination-b").change(function(){
      var terminationType = parseInt($(this).val());
      if(factory.activePath){
        var path = factory.wirepaths.at(factory.activePath);
        path.terminationB = terminationType;
        path.update().updateDOM();
      }
    });
     $("#weight-profile").change(function(){
      var profileType = parseInt($(this).val());
      if(factory.activePath){
        var path = factory.wirepaths.at(factory.activePath);
        path.weight_profile = profileType;
        path.update().updateDOM();
      }
    });
     $('#save-progress').click(function(){
      factory.save();
     });
     $('#undo').click(function(){
      factory.undo();
     });
     $('#redo').click(function(){
      factory.redo();
     });
     $('#revert').click(function(){
      factory.revert();
     });
     $('#fast-forward').click(function(){
      factory.fast_forward();
     });

     $('#save-svg').click(function(){
      factory.export(JigDesigner.SVG);
     });
     $('#save-json').click(function(){
      factory.export(JigDesigner.JSON);
     });
    

  }


</script>


<!-- 
db   db d888888b .88b  d88. db      
88   88 `~~88~~' 88'YbdP`88 88      
88ooo88    88    88  88  88 88      
88~~~88    88    88  88  88 88      
88   88    88    88  88  88 88booo. 
YP   YP    YP    YP  YP  YP Y88888P  
-->
<div id="interface-container" class="row">   

 
  <%= render :partial => "toolbox" %>
            
  <div id="sandbox" class="col-xs-8">
    <!-- <canvas id="sandboxy" resize></canvas> -->
  </div>
  <%= render :partial => "sidebar" %>
<%= render 'collection'%>
